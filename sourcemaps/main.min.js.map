{"version":3,"sources":["01_main.js"],"names":["sliderObjects","SlidersArray","document","querySelectorAll","forEach","slider","index","setAttribute","Swiper","slidesPerView","spaceBetween","pagination","el","type","clickable","$","ready","updateZoomVariable","screenWidth","window","innerWidth","zoomValue","toFixed","documentElement","style","setProperty","click","this","toggleClass","addEventListener","animItems","length","animOnScroll","params","animItem","animItemHeight","offsetHeight","animItemOffset","offset","top","animStart","animItemPoint","innerHeight","pageYOffset","classList","add","contains","remove","rect","getBoundingClientRect","scrollLeft","pageXOffset","scrollTop","left","setTimeout"],"mappings":"AAAA,SAASA,gBACL,IAAIC,EAAe,GAELC,SAASC,iBAAiB,gBAChCC,QAAQ,CAACC,EAAOC,KACpBD,EAAOE,aAAa,iBAAiBD,GAErCL,EAAaK,GAAS,IAAIE,OAAO,gCAAgCF,gBAAqB,CAClFG,cAAe,EACfC,aAAc,GACdC,WAAY,CACRC,GAAI,gCAAgCN,yBACpCO,KAAM,UACNC,WAAW,OAM3Bd,gBAGAe,EAAEb,UAAUc,OAAM,WAUd,SAASC,IAEL,MAAMC,EAAcC,OAAOC,WAC3B,IAAIC,EAIAA,EAFAH,EAAc,MAEDA,EAAc,MAAMI,QAAQ,GAG7B,EAIhBpB,SAASqB,gBAAgBC,MAAMC,YAAY,SAAUJ,GAtB7DN,EAAE,WAAWW,OAAM,WACfX,EAAEY,MAAMC,YAAY,kBACpBb,EAAE,kBAAkBa,YAAY,yBAChCb,EAAE,QAAQa,YAAY,iBAuBtBX,IAGAE,OAAOU,iBAAiB,SAAUZ,GAItC,MAAMa,EAAY5B,SAASC,iBAAiB,gBAE5C,GAAI2B,EAAUC,OAAS,EAAG,CAEtB,SAASC,EAAaC,GAClB,IAAK,IAAI3B,EAAQ,EAAGA,EAAQwB,EAAUC,OAAQzB,IAAS,CACnD,MAAM4B,EAAWJ,EAAUxB,GACrB6B,EAAiBD,EAASE,aAC1BC,EAAiBC,EAAOJ,GAAUK,IAClCC,EAAY,EAElB,IAAIC,EAAgBtB,OAAOuB,YAAcP,EAAiBK,EAEtDL,EAAiBhB,OAAOuB,cACxBD,EAAgBtB,OAAOuB,YAAcvB,OAAOuB,YAAcF,GAGzDG,YAAcN,EAAiBI,GAAkBE,YAAeN,EAAiBF,EAClFD,EAASU,UAAUC,IAAI,UAElBX,EAASU,UAAUE,SAAS,iBAC7BZ,EAASU,UAAUG,OAAO,WAK1C,SAAST,EAAO1B,GACZ,MAAMoC,EAAOpC,EAAGqC,wBACZC,EAAa/B,OAAOgC,aAAejD,SAASqB,gBAAgB2B,WAC5DE,EAAYjC,OAAOwB,aAAezC,SAASqB,gBAAgB6B,UAC/D,MAAO,CAAEb,IAAKS,EAAKT,IAAMa,EAAWC,KAAML,EAAKK,KAAOH,GA3B1D/B,OAAOU,iBAAiB,SAAUG,GA8BlCsB,WAAW,KACPtB,KACD","file":"../js/main.min.js","sourcesContent":["function sliderObjects() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".object-card\")\r\n    sliders.forEach((slider,index) => {\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n\r\n        SlidersArray[index] = new Swiper(`.object-card[data-slider-id=\"${index}\"] .mySwiper`, {\r\n            slidesPerView: 1,\r\n            spaceBetween: 10,\r\n            pagination: {\r\n                el: `.object-card[data-slider-id=\"${index}\"] .swiper-pagination`,\r\n                type: 'bullets',\r\n                clickable: true,\r\n            },\r\n        })\r\n    })\r\n}\r\n\r\nsliderObjects();\r\n\r\n\r\n$(document).ready(function () {\r\n\r\n$('.burger').click(function () {\r\n    $(this).toggleClass('burger--active')\r\n    $('.header__right').toggleClass('header__right--active')\r\n    $('body').toggleClass('fixed-body')\r\n})\r\n\r\n\r\n//Zoom\r\n    function updateZoomVariable() {\r\n        // Определяем ширину окна браузера\r\n        const screenWidth = window.innerWidth;\r\n        let zoomValue;\r\n\r\n        if (screenWidth > 1920) {\r\n            // Вычисляем zoom для экранов шире 1920px\r\n            zoomValue = (screenWidth / 1920).toFixed(2);\r\n        } else {\r\n            // Для экранов 1920px или уже, устанавливаем zoom равным 1\r\n            zoomValue = 1;\r\n        }\r\n\r\n        // Устанавливаем CSS переменную --zoom для корневого элемента (HTML)\r\n        document.documentElement.style.setProperty('--zoom', zoomValue);\r\n    }\r\n\r\n// Вызываем функцию первоначально, чтобы установить переменную при загрузке страницы\r\n    updateZoomVariable();\r\n\r\n// Добавляем слушатель событий, чтобы обновлять переменную при изменении размера окна\r\n    window.addEventListener('resize', updateZoomVariable);\r\n\r\n\r\n// Animation\r\nconst animItems = document.querySelectorAll('._anim-items')\r\n\r\nif (animItems.length > 0) {\r\n    window.addEventListener('scroll', animOnScroll)\r\n    function animOnScroll(params) {\r\n        for (let index = 0; index < animItems.length; index++) {\r\n            const animItem = animItems[index];\r\n            const animItemHeight = animItem.offsetHeight;\r\n            const animItemOffset = offset(animItem).top;\r\n            const animStart = 4;\r\n\r\n            let animItemPoint = window.innerHeight - animItemHeight / animStart;\r\n\r\n            if (animItemHeight > window.innerHeight) {\r\n                animItemPoint = window.innerHeight - window.innerHeight / animStart;\r\n            }\r\n\r\n            if ((pageYOffset > animItemOffset - animItemPoint) && pageYOffset < (animItemOffset + animItemHeight)) {\r\n                animItem.classList.add('active');\r\n            } else {\r\n                if (!animItem.classList.contains('anim-no-hide')) {\r\n                    animItem.classList.remove('active')\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function offset(el) {\r\n        const rect = el.getBoundingClientRect(),\r\n            scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n            scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\r\n    }\r\n\r\n    setTimeout(() => {\r\n        animOnScroll();\r\n    }, 300)\r\n}\r\n\r\n})\r\n  "]}